{
  "address": "0x97cFdd3d45d7Df2EA9552DF5Ee8473128d1833de",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "Banned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registration",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "info",
          "type": "bytes32"
        }
      ],
      "name": "CallerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registration",
          "type": "address"
        }
      ],
      "name": "CallerUnregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Halted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registration",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "info",
          "type": "bytes32"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "Unbanned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unhalted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registration",
          "type": "address"
        }
      ],
      "name": "Unregistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEPRECATED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "ban",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bannedAgents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fHalt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "handlers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "isValidCaller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        }
      ],
      "name": "isValidHandler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registration",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "info",
          "type": "bytes32"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registration",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "info",
          "type": "bytes32"
        }
      ],
      "name": "registerCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "unban",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unhalt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registration",
          "type": "address"
        }
      ],
      "name": "unregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registration",
          "type": "address"
        }
      ],
      "name": "unregisterCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x181609f9482cc05a6e505441069ada8d6e483164fda5ef4102ea4759b86af221",
  "receipt": {
    "to": null,
    "from": "0xE8b558C4a3f20980E5d781f46D2A4Dd86dA7D449",
    "contractAddress": "0x97cFdd3d45d7Df2EA9552DF5Ee8473128d1833de",
    "transactionIndex": 0,
    "gasUsed": "1893849",
    "logsBloom": "0x
    "blockHash": "0xd30b8a5893ad5b88f696f09d339f21b93c67d864ed9617064877f6eb1c3d6674",
    "transactionHash": "0x181609f9482cc05a6e505441069ada8d6e483164fda5ef4102ea4759b86af221",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 13356583,
        "transactionHash": "0x181609f9482cc05a6e505441069ada8d6e483164fda5ef4102ea4759b86af221",
        "address": "0x97cFdd3d45d7Df2EA9552DF5Ee8473128d1833de",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e8b558c4a3f20980e5d781f46d2a4dd86da7d449"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd30b8a5893ad5b88f696f09d339f21b93c67d864ed9617064877f6eb1c3d6674"
      }
    ],
    "blockNumber": 13356583,
    "cumulativeGasUsed": "1893849",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "05a3724dc9e1f283fb20820d17e328b2",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"Banned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"info\",\"type\":\"bytes32\"}],\"name\":\"CallerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"}],\"name\":\"CallerUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Halted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"info\",\"type\":\"bytes32\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"Unbanned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unhalted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"}],\"name\":\"Unregistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPRECATED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"ban\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bannedAgents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fHalt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"handlers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"isValidCaller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"isValidHandler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"info\",\"type\":\"bytes32\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"info\",\"type\":\"bytes32\"}],\"name\":\"registerCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"unban\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"}],\"name\":\"unregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registration\",\"type\":\"address\"}],\"name\":\"unregisterCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidCaller(address)\":{\"params\":{\"caller\":\"The caller to be verified.\"}},\"isValidHandler(address)\":{\"params\":{\"handler\":\"The handler to be verified.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"register(address,bytes32)\":{\"params\":{\"info\":\"Info string.\",\"registration\":\"Handler address.\"}},\"registerCaller(address,bytes32)\":{\"details\":\"Dapps that triggers callback function should be registered. In this case, registration is the Dapp address and the leading 20 bytes of info is the handler address.\",\"params\":{\"info\":\"Info string.\",\"registration\":\"Caller address.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unregister(address)\":{\"params\":{\"registration\":\"The handler to be unregistered.\"}},\"unregisterCaller(address)\":{\"params\":{\"registration\":\"The caller to be unregistered.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ban(address)\":{\"notice\":\"Ban agent from query\"},\"isValidCaller(address)\":{\"notice\":\"Check if the caller is valid.\"},\"isValidHandler(address)\":{\"notice\":\"Check if the handler is valid.\"},\"register(address,bytes32)\":{\"notice\":\"Register a handler with a bytes32 information.\"},\"registerCaller(address,bytes32)\":{\"notice\":\"Register a caller with a bytes32 information.\"},\"unban(address)\":{\"notice\":\"Unban agent from query\"},\"unregister(address)\":{\"notice\":\"Unregister a handler. The handler will be deprecated.\"},\"unregisterCaller(address)\":{\"notice\":\"Unregister a caller. The caller will be deprecated.\"}},\"notice\":\"The registry database for Furucombo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\"},\"contracts/Registry.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interface/IRegistry.sol\\\";\\n\\n/// @notice The registry database for Furucombo\\ncontract Registry is IRegistry, Ownable {\\n    mapping(address => bytes32) public override handlers;\\n    mapping(address => bytes32) public override callers;\\n    mapping(address => uint256) public override bannedAgents;\\n    bool public override fHalt;\\n\\n    bytes32 public constant DEPRECATED = bytes10(0x64657072656361746564);\\n\\n    event Registered(address indexed registration, bytes32 info);\\n    event Unregistered(address indexed registration);\\n    event CallerRegistered(address indexed registration, bytes32 info);\\n    event CallerUnregistered(address indexed registration);\\n    event Banned(address indexed agent);\\n    event Unbanned(address indexed agent);\\n    event Halted();\\n    event Unhalted();\\n\\n    modifier isNotHalted() {\\n        require(fHalt == false, \\\"Halted\\\");\\n        _;\\n    }\\n\\n    modifier isHalted() {\\n        require(fHalt, \\\"Not halted\\\");\\n        _;\\n    }\\n\\n    modifier isNotBanned(address agent) {\\n        require(bannedAgents[agent] == 0, \\\"Banned\\\");\\n        _;\\n    }\\n\\n    modifier isBanned(address agent) {\\n        require(bannedAgents[agent] != 0, \\\"Not banned\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Register a handler with a bytes32 information.\\n     * @param registration Handler address.\\n     * @param info Info string.\\n     */\\n    function register(address registration, bytes32 info) external onlyOwner {\\n        require(registration != address(0), \\\"zero address\\\");\\n        require(info != DEPRECATED, \\\"unregistered info\\\");\\n        require(handlers[registration] != DEPRECATED, \\\"unregistered\\\");\\n        handlers[registration] = info;\\n        emit Registered(registration, info);\\n    }\\n\\n    /**\\n     * @notice Unregister a handler. The handler will be deprecated.\\n     * @param registration The handler to be unregistered.\\n     */\\n    function unregister(address registration) external onlyOwner {\\n        require(registration != address(0), \\\"zero address\\\");\\n        require(handlers[registration] != bytes32(0), \\\"no registration\\\");\\n        require(handlers[registration] != DEPRECATED, \\\"unregistered\\\");\\n        handlers[registration] = DEPRECATED;\\n        emit Unregistered(registration);\\n    }\\n\\n    /**\\n     * @notice Register a caller with a bytes32 information.\\n     * @param registration Caller address.\\n     * @param info Info string.\\n     * @dev Dapps that triggers callback function should be registered.\\n     * In this case, registration is the Dapp address and the leading 20 bytes\\n     * of info is the handler address.\\n     */\\n    function registerCaller(address registration, bytes32 info)\\n        external\\n        onlyOwner\\n    {\\n        require(registration != address(0), \\\"zero address\\\");\\n        require(info != DEPRECATED, \\\"unregistered info\\\");\\n        require(callers[registration] != DEPRECATED, \\\"unregistered\\\");\\n        callers[registration] = info;\\n        emit CallerRegistered(registration, info);\\n    }\\n\\n    /**\\n     * @notice Unregister a caller. The caller will be deprecated.\\n     * @param registration The caller to be unregistered.\\n     */\\n    function unregisterCaller(address registration) external onlyOwner {\\n        require(registration != address(0), \\\"zero address\\\");\\n        require(callers[registration] != bytes32(0), \\\"no registration\\\");\\n        require(callers[registration] != DEPRECATED, \\\"unregistered\\\");\\n        callers[registration] = DEPRECATED;\\n        emit CallerUnregistered(registration);\\n    }\\n\\n    /**\\n     * @notice Ban agent from query\\n     *\\n     */\\n    function ban(address agent) external isNotBanned(agent) onlyOwner {\\n        bannedAgents[agent] = 1;\\n        emit Banned(agent);\\n    }\\n\\n    /**\\n     * @notice Unban agent from query\\n     */\\n    function unban(address agent) external isBanned(agent) onlyOwner {\\n        bannedAgents[agent] = 0;\\n        emit Unbanned(agent);\\n    }\\n\\n    /**\\n     * @notice Check if the handler is valid.\\n     * @param handler The handler to be verified.\\n     */\\n    function isValidHandler(address handler)\\n        external\\n        view\\n        override\\n        returns (bool)\\n    {\\n        return handlers[handler] != 0 && handlers[handler] != DEPRECATED;\\n    }\\n\\n    /**\\n     * @notice Check if the caller is valid.\\n     * @param caller The caller to be verified.\\n     */\\n    function isValidCaller(address caller)\\n        external\\n        view\\n        override\\n        returns (bool)\\n    {\\n        return callers[caller] != 0 && callers[caller] != DEPRECATED;\\n    }\\n\\n    function halt() external isNotHalted onlyOwner {\\n        fHalt = true;\\n        emit Halted();\\n    }\\n\\n    function unhalt() external isHalted onlyOwner {\\n        fHalt = false;\\n        emit Unhalted();\\n    }\\n}\\n\",\"keccak256\":\"0xdab858496e5d8824ef1613359cdcf16fb804fe83521afdce7b8c841972640e68\"},\"contracts/interface/IRegistry.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface IRegistry {\\n    function handlers(address) external view returns (bytes32);\\n    function callers(address) external view returns (bytes32);\\n    function bannedAgents(address) external view returns (uint256);\\n    function fHalt() external view returns (bool);\\n    function isValidHandler(address handler) external view returns (bool);\\n    function isValidCaller(address handler) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6033e6932f50b45a31eed1ef34fb13cc85e4001f31f6d63b604ed6322a491bbd\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b612108806100db6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063bb1010e911610071578063bb1010e914610435578063cb3e64fd1461048f578063d4c6834814610499578063ea750af6146104f3578063f2fde38b1461051357610116565b80638da5cb5b1461033557806397c3ccd814610369578063afb4bfbd146103ad578063b9f14557146103f157610116565b806356ea919f116100e957806356ea919f1461025d5780635ed7ca5b146102ab578063715018a6146102b55780637bbf4a3f146102bf578063818b47a71461031757610116565b80631903dcaa1461011b5780631a21c0bc146101735780631e7a505f146101cb5780632ec2c24614610219575b600080fd5b61015d6004803603602081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610557565b6040518082815260200191505060405180910390f35b6101b56004803603602081101561018957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061056f565b6040518082815260200191505060405180910390f35b610217600480360360408110156101e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610587565b005b61025b6004803603602081101561022f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108ff565b005b6102a96004803603604081101561027357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cad565b005b6102b3611025565b005b6102bd6111bf565b005b610301600480360360208110156102d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611345565b6040518082815260200191505060405180910390f35b61031f61135d565b6040518082815260200191505060405180910390f35b61033d611387565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ab6004803603602081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113b0565b005b6103ef600480360360208110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ba565b005b6104336004803603602081101561040757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611968565b005b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b73565b60405180821515815260200191505060405180910390f35b610497611c33565b005b6104db600480360360208110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc6565b60405180821515815260200191505060405180910390f35b6104fb611e86565b60405180821515815260200191505060405180910390f35b6105556004803603602081101561052957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e99565b005b60036020528060005260406000206000915090505481565b60016020528060005260406000206000915090505481565b61058f6120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff191681141561078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f756e7265676973746572656420696e666f00000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167fb8142d42f05d95abf0a6570799774d59276e49ea32a04d9a4ec316ea4a6886bc826040518082815260200191505060405180910390a25050565b6109076120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610b22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f20726567697374726174696f6e000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610bfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f75cd6de711483e11488a1cd9b66172abccb9e5c19572f92015a7880f0c8c0edc60405160405180910390a250565b610cb56120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916811415610eb4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f756e7265676973746572656420696e666f00000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610f8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167fbcf9675eb3fde058129f75f75f8b7a48bf7bcc37ec73dfd9b45218d551ce483b826040518082815260200191505060405180910390a25050565b60001515600460009054906101000a900460ff161515146110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f48616c746564000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6110b66120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611176576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600460006101000a81548160ff0219169083151502179055507f1ee9080f6b55ca44ce58681c8162e6c1ac1c47e1da791a4a1c1ec6186d8af1f360405160405180910390a1565b6111c76120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611287576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60026020528060005260406000206000915090505481565b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff191681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611466576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f42616e6e6564000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61146e6120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461152e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f30d1df1214d91553408ca5384ce29e10e5866af8423c628be22860e41fb8100560405160405180910390a25050565b6115c26120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611682576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156117dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f20726567697374726174696f6e000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156118b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f5b357470d4ba3884887ef785883313bfabff1620ba84b4a140ddc4536cb2e0b660405160405180910390a250565b806000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611a1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f742062616e6e65640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611a276120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ae7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2ab91b53354938415bb6962c4322231cd4cb2c84930f1a4b9abbedc2fe8abe7260405160405180910390a25050565b60008060001b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414158015611c2c5750696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b9050919050565b600460009054906101000a900460ff16611cb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f742068616c7465640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611cbd6120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600460006101000a81548160ff0219169083151502179055507f7c46a5e7a10434913e987d799d659758880ce8e790692e13e66ddfae4cc9afca60405160405180910390a1565b60008060001b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414158015611e7f5750696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b9050919050565b600460009054906101000a900460ff1681565b611ea16120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806120ad6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212202fe2fdc19605872000b5b163bdd1dfc4cbcec506f42d584dd8821d1a871093a364736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063bb1010e911610071578063bb1010e914610435578063cb3e64fd1461048f578063d4c6834814610499578063ea750af6146104f3578063f2fde38b1461051357610116565b80638da5cb5b1461033557806397c3ccd814610369578063afb4bfbd146103ad578063b9f14557146103f157610116565b806356ea919f116100e957806356ea919f1461025d5780635ed7ca5b146102ab578063715018a6146102b55780637bbf4a3f146102bf578063818b47a71461031757610116565b80631903dcaa1461011b5780631a21c0bc146101735780631e7a505f146101cb5780632ec2c24614610219575b600080fd5b61015d6004803603602081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610557565b6040518082815260200191505060405180910390f35b6101b56004803603602081101561018957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061056f565b6040518082815260200191505060405180910390f35b610217600480360360408110156101e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610587565b005b61025b6004803603602081101561022f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108ff565b005b6102a96004803603604081101561027357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cad565b005b6102b3611025565b005b6102bd6111bf565b005b610301600480360360208110156102d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611345565b6040518082815260200191505060405180910390f35b61031f61135d565b6040518082815260200191505060405180910390f35b61033d611387565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ab6004803603602081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113b0565b005b6103ef600480360360208110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ba565b005b6104336004803603602081101561040757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611968565b005b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b73565b60405180821515815260200191505060405180910390f35b610497611c33565b005b6104db600480360360208110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc6565b60405180821515815260200191505060405180910390f35b6104fb611e86565b60405180821515815260200191505060405180910390f35b6105556004803603602081101561052957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e99565b005b60036020528060005260406000206000915090505481565b60016020528060005260406000206000915090505481565b61058f6120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff191681141561078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f756e7265676973746572656420696e666f00000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167fb8142d42f05d95abf0a6570799774d59276e49ea32a04d9a4ec316ea4a6886bc826040518082815260200191505060405180910390a25050565b6109076120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610b22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f20726567697374726174696f6e000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610bfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f75cd6de711483e11488a1cd9b66172abccb9e5c19572f92015a7880f0c8c0edc60405160405180910390a250565b610cb56120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916811415610eb4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f756e7265676973746572656420696e666f00000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610f8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167fbcf9675eb3fde058129f75f75f8b7a48bf7bcc37ec73dfd9b45218d551ce483b826040518082815260200191505060405180910390a25050565b60001515600460009054906101000a900460ff161515146110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f48616c746564000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6110b66120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611176576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600460006101000a81548160ff0219169083151502179055507f1ee9080f6b55ca44ce58681c8162e6c1ac1c47e1da791a4a1c1ec6186d8af1f360405160405180910390a1565b6111c76120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611287576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60026020528060005260406000206000915090505481565b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff191681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611466576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f42616e6e6564000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61146e6120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461152e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f30d1df1214d91553408ca5384ce29e10e5866af8423c628be22860e41fb8100560405160405180910390a25050565b6115c26120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611682576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156117dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f20726567697374726174696f6e000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156118b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f756e72656769737465726564000000000000000000000000000000000000000081525060200191505060405180910390fd5b696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f5b357470d4ba3884887ef785883313bfabff1620ba84b4a140ddc4536cb2e0b660405160405180910390a250565b806000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611a1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f742062616e6e65640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611a276120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ae7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2ab91b53354938415bb6962c4322231cd4cb2c84930f1a4b9abbedc2fe8abe7260405160405180910390a25050565b60008060001b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414158015611c2c5750696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b9050919050565b600460009054906101000a900460ff16611cb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f742068616c7465640000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611cbd6120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600460006101000a81548160ff0219169083151502179055507f7c46a5e7a10434913e987d799d659758880ce8e790692e13e66ddfae4cc9afca60405160405180910390a1565b60008060001b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414158015611e7f5750696465707265636174656460b01b75ffffffffffffffffffffffffffffffffffffffffffff1916600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b9050919050565b600460009054906101000a900460ff1681565b611ea16120a4565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806120ad6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212202fe2fdc19605872000b5b163bdd1dfc4cbcec506f42d584dd8821d1a871093a364736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isValidCaller(address)": {
        "params": {
          "caller": "The caller to be verified."
        }
      },
      "isValidHandler(address)": {
        "params": {
          "handler": "The handler to be verified."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "register(address,bytes32)": {
        "params": {
          "info": "Info string.",
          "registration": "Handler address."
        }
      },
      "registerCaller(address,bytes32)": {
        "details": "Dapps that triggers callback function should be registered. In this case, registration is the Dapp address and the leading 20 bytes of info is the handler address.",
        "params": {
          "info": "Info string.",
          "registration": "Caller address."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unregister(address)": {
        "params": {
          "registration": "The handler to be unregistered."
        }
      },
      "unregisterCaller(address)": {
        "params": {
          "registration": "The caller to be unregistered."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "ban(address)": {
        "notice": "Ban agent from query"
      },
      "isValidCaller(address)": {
        "notice": "Check if the caller is valid."
      },
      "isValidHandler(address)": {
        "notice": "Check if the handler is valid."
      },
      "register(address,bytes32)": {
        "notice": "Register a handler with a bytes32 information."
      },
      "registerCaller(address,bytes32)": {
        "notice": "Register a caller with a bytes32 information."
      },
      "unban(address)": {
        "notice": "Unban agent from query"
      },
      "unregister(address)": {
        "notice": "Unregister a handler. The handler will be deprecated."
      },
      "unregisterCaller(address)": {
        "notice": "Unregister a caller. The caller will be deprecated."
      }
    },
    "notice": "The registry database for Furucombo",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30,
        "contract": "contracts/Registry.sol:Registry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2401,
        "contract": "contracts/Registry.sol:Registry",
        "label": "handlers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 2406,
        "contract": "contracts/Registry.sol:Registry",
        "label": "callers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 2411,
        "contract": "contracts/Registry.sol:Registry",
        "label": "bannedAgents",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2414,
        "contract": "contracts/Registry.sol:Registry",
        "label": "fHalt",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}